{"version":3,"sources":["InstructionsModal.jsx","Home.jsx","alphabetArray.js","wordsArray.js","LetterCard.jsx","AlphabetSelector.jsx","CorrectWord.jsx","Score.jsx","Game.jsx","AboutMe.jsx","App.js","serviceWorker.js","index.js"],"names":["InstructionsModal","react_default","a","createElement","Modal_default","Object","assign","this","props","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","className","role","aria-label","Footer","Button_default","onClick","onHide","Component","Home","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","modalShow","_this2","setState","src_InstructionsModal","show","react_router_dom","to","alphabetArray","name","isUsed","words","LetterCard","_ref","handleClickLetter","letter","event","target","toUpperCase","AlphabetSelector","alphabet","gameFinish","map","src_LetterCard","key","CorrectWord","correctLetter","isVisible","Score","score","handleInicialState","isGameOver","src","alt","concat","hangmanStage","inicialState","correctWord","step","Game","getInicialState","randomWord","Math","floor","random","length","split","inicialCorrectWord","forEach","push","handlePressKey","_this$state","newAlphabet","toLowerCase","isAnswerCorrect","isScored","isGameFinished","onMarkAsSelected","selectedLetter","pickedLetter","finalCorrectWord","letterObject","_this$state2","some","element","_this$state3","every","componentDidMount","onInicialState","window","addEventListener","_this$state4","src_AlphabetSelector","index","src_CorrectWord","src_Score","AboutMe","href","App","react_router","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0e27f53a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button'\n\nclass InstructionsModal extends Component {\n    render() {\n      return (\n        <Modal\n          {...this.props}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              How to Play\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <h4>Instructions</h4>\n            <p className=\"instructions\">\n              You have to guess which letters contains the word hidden.\n              You can click on your keyboard or click on the screen to pick a letter.\n              You have 6 lives to achieve the big prize <span role=\"img\" aria-label=\"Sily face\">ðŸ˜†</span>\n            </p>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={this.props.onHide}>Close</Button>\n          </Modal.Footer>\n        </Modal>\n      );\n    }\n  }\n\nexport default InstructionsModal;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport InstructionsModal from \"./InstructionsModal\";\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {modalShow: false}\n    }\n\n    render() {\n        let modalClose = () => this.setState({ modalShow: false });\n        return (\n            <div className=\"Home\">\n                <h1 className=\"title\">\n                    Welcome to\n                    <div> Hangman Game </div>\n                </h1>\n                <div className=\"button-options\">\n                    <button className=\"instructions\" onClick={() => this.setState({ modalShow: true })}>How to Play</button>\n                    <InstructionsModal\n                    show={this.state.modalShow}\n                    onHide={modalClose}\n                    />\n                    <Link to=\"/hangman\" className=\"play\"><button>Let's Play</button></Link>\n                </div>\n                <Link to=\"/about\">About me</Link>\n            </div>\n        );\n    }\n}\n\nexport default Home;","const alphabetArray = [\n    { name: \"a\", isUsed: false},\n    { name: \"b\", isUsed: false},\n    { name: \"c\", isUsed: false},\n    { name: \"d\", isUsed: false},\n    { name: \"e\", isUsed: false},\n    { name: \"f\", isUsed: false},\n    { name: \"g\", isUsed: false},\n    { name: \"h\", isUsed: false},\n    { name: \"i\", isUsed: false},\n    { name: \"j\", isUsed: false},\n    { name: \"k\", isUsed: false},\n    { name: \"l\", isUsed: false},\n    { name: \"m\", isUsed: false},\n    { name: \"n\", isUsed: false},\n    { name: \"o\", isUsed: false},\n    { name: \"p\", isUsed: false},\n    { name: \"q\", isUsed: false},\n    { name: \"r\", isUsed: false},\n    { name: \"s\", isUsed: false},\n    { name: \"t\", isUsed: false},\n    { name: \"u\", isUsed: false},\n    { name: \"v\", isUsed: false},\n    { name: \"w\", isUsed: false},\n    { name: \"x\", isUsed: false},\n    { name: \"y\", isUsed: false},\n    { name: \"z\", isUsed: false},\n];\n\nexport default alphabetArray;\n","const words = [\"kiwi\", \"pineapple\", \"mango\", \"avocado\", \"banana\", \"peach\", \"dragonfruit\", \"passionfruit\", \"orange\", \"watermelon\"];\n\nexport default words;","import React from 'react';\n\nconst LetterCard = ({ handleClickLetter, letter }) => {\n    const handleClick = (event) => handleClickLetter(event.target.id);\n    const isLetterUsed = () => letter.isUsed ? \"letter-disabled\" : \"letter-active\";\n    return(\n        <div className={isLetterUsed()} onClick={handleClick} id={letter.name}>{letter.name.toUpperCase()}</div>\n    );\n}\n\nexport default LetterCard;","import React from 'react';\nimport LetterCard from './LetterCard';\n\nconst AlphabetSelector = ({ handleClickLetter, alphabet, gameFinish }) => {\n    const isBoardAvailable = () => gameFinish ? \"alphabet-board disabled\" : \"alphabet-board active\";\n    return (\n        <div className={isBoardAvailable()}>\n        <h1 className=\"title\">Pick a letter:</h1>\n            {\n              alphabet.map(letter => <LetterCard key={letter.name} letter={letter} handleClickLetter={handleClickLetter}/>)\n            }     \n        </div>\n    );\n}\n\nexport default AlphabetSelector;","import React from 'react';\n\nconst CorrectWord = ({ correctLetter }) => {\n    const isLetterCorrect = () => correctLetter.isVisible ? \"letter-visible\" : \"letter-invisible\"\n    return (\n        <div className=\"underline\">\n            <p className={isLetterCorrect()}>\n                {correctLetter.name.toUpperCase()}\n            </p>\n        </div>\n    );\n}\n\nexport default CorrectWord;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst Score = ( {score, handleInicialState} ) => {\n    const isGameOver = () => (score === 0) ? true : false;\n    const handleClick = () => handleInicialState();\n    return (\n        <div className=\"score\">\n            <div className=\"title\">\n                <h1>{isGameOver() ? \"GAME OVER\" : \"YOU WIN\"}</h1>\n                <img src={isGameOver() ? \"https://media.giphy.com/media/l0IyaF4KPk0clJWYE/giphy.gif\" : \"https://media.giphy.com/media/3og0IUEVx2NvH3iVj2/giphy.gif\" } alt=\"\"/>\n            </div>\n            <h2>{isGameOver() ? \"\" : `Your score is: ${score}`}</h2>\n            <Link to=\"/hangman\" className=\"play\" onClick={handleClick}><button>Play Again</button></Link>            \n            <Link to=\"/\" className=\"back-home\"><button>Back home</button></Link>   \n        </div>\n    );\n}\n\nexport default Score;","import React, { Component } from 'react';\nimport alphabetArray from './alphabetArray';\nimport words from './wordsArray';\nimport AlphabetSelector from './AlphabetSelector';\nimport CorrectWord from './CorrectWord';\nimport Score from './Score';\n\n\nconst hangmanStage = [\n    \"https://res.cloudinary.com/dc4zctxhv/image/upload/v1558089351/stage_0_eva88u.png\",\n    \"https://res.cloudinary.com/dc4zctxhv/image/upload/v1558089352/stage_1_x0l0hu.png\",\n    \"https://res.cloudinary.com/dc4zctxhv/image/upload/v1558089353/stage_2_fbutbz.png\", \"https://res.cloudinary.com/dc4zctxhv/image/upload/v1558089354/stage_3_l30i1y.png\", \"https://res.cloudinary.com/dc4zctxhv/image/upload/v1558089355/stage_4_fixc9l.png\", \"https://res.cloudinary.com/dc4zctxhv/image/upload/v1558089356/stage_5_uxpjmh.png\", \"https://res.cloudinary.com/dc4zctxhv/image/upload/v1558089357/stage_6_iy5bbn.png\"\n];\n\nlet inicialState = {\n    alphabet: [],\n    correctWord: [],\n    step: 0,\n    score: 0,\n    gameFinish: false\n};\n\nclass Game extends Component {\n    constructor(props) {\n        super(props);\n        this.state = inicialState\n    }\n\n    getInicialState = () => {\n        const randomWord = words[Math.floor(Math.random() * words.length)].split(\"\");\n        let inicialCorrectWord =[];\n        randomWord.forEach(letter => {\n            inicialCorrectWord.push({\n            name: letter,\n            isVisible: false\n            });\n        });\n\n        inicialState = {\n            alphabet: alphabetArray,\n            correctWord: inicialCorrectWord,\n            step: 0,\n            score: 0,\n            gameFinish: false\n        };\n        return inicialState;\n    }\n\n    handlePressKey = (event) => {\n        const { alphabet, gameFinish } = this.state;\n        if(gameFinish === true) {\n            return null;\n        } else {\n        const newAlphabet = alphabet.map(letter => {\n            if((letter.name === event.key.toLowerCase()) || (letter.isUsed === true)) {\n                return {name:letter.name, isUsed: true};\n            }\n            return {name:letter.name, isUsed: false};\n        });\n        this.setState({alphabet: newAlphabet});\n        this.isAnswerCorrect(event.key.toLowerCase());\n        this.isScored(event.key.toLowerCase());\n        this.isGameFinished();\n        }\n    }\n\n    onMarkAsSelected = (selectedLetter) => {\n        const { alphabet } = this.state;\n        const newAlphabet = alphabet.map(letter => {\n            if((letter.name === selectedLetter.toLowerCase()) || (letter.isUsed === true)) {\n                return {name:letter.name, isUsed: true};\n            }\n            return {name:letter.name, isUsed: false};\n        });\n        this.setState({alphabet: newAlphabet}); \n        this.isAnswerCorrect(selectedLetter.toLowerCase());\n        this.isScored(selectedLetter.toLowerCase());\n        this.isGameFinished();\n    }\n\n    isAnswerCorrect = (pickedLetter) => {\n        const { correctWord } = this.state;\n        const finalCorrectWord = correctWord.map(letterObject => {\n            if(letterObject.name === pickedLetter || letterObject.isVisible === true) {\n                return {name: letterObject.name, isVisible: true};\n            } return {name: letterObject.name, isVisible: false}\n        });\n        this.setState({correctWord: finalCorrectWord});\n    }\n\n    isScored = (pickedLetter) => {\n        const { correctWord } = this.state;\n        let { score, step } = this.state;\n        if(correctWord.some(element => element.name === pickedLetter)) {\n            this.setState({\n                score: score + 10\n            });\n        } else {\n            this.setState({\n                step: step + 1\n            })\n        }\n    }\n\n    isGameFinished = () => {\n        const { step, correctWord } = this.state;\n        if(step === 6) {\n            this.setState({\n                gameFinish: true,\n                score: 0\n            });\n        } else if (correctWord.every(element => element.isVisible === true)) {\n            this.setState({gameFinish: true}); \n        }\n    }\n\n    componentDidMount = () => {\n        this.onInicialState();\n        window.addEventListener(\"keypress\", this.handlePressKey,false);\n    }\n\n    onInicialState = () => {\n        const inicialState= this.getInicialState();\n        this.setState(inicialState);\n    }\n\n    render() {\n        const { alphabet, step, correctWord, gameFinish, score } = this.state;\n        return (\n            <div className=\"game\">\n                <div className=\"board\">\n                    <img src={hangmanStage[step]} alt={step} />\n                    <AlphabetSelector handleClickLetter={this.onMarkAsSelected} alphabet={alphabet} gameFinish={gameFinish}/>\n                </div>\n                <div className=\"correct-word\">\n                    {correctWord.map((correctLetter, index) => <CorrectWord key={index} correctLetter={correctLetter} /> )}\n                </div>\n                {gameFinish && <Score score={score} handleInicialState={this.onInicialState}/>}\n            </div>\n        );\n    }\n}\n\nexport default Game;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst AboutMe = () => {\n    return (\n        <div className=\"about\">\n            <h1 className=\"title\">About Me</h1>\n            <div className=\"author\">\n                <p className=\"name\">SOFIA ROCHA</p>\n                <p className=\"description\">I'm a web developer student <a href=\"https://wildcodeschool.com/\">@Wild Code School</a>. This project was done on my first hackathon during 24h.</p>\n                <Link to=\"/\" className=\"back-home\"><button>Home</button></Link>\n            </div>\n        </div>\n    );\n}\n\nexport default AboutMe;","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport './App.scss';\nimport Home from './Home';\nimport Game from './Game';\nimport Score from './Score';\nimport AboutMe from './AboutMe';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/hangman\" component={Game} />\n        <Route path=\"/score\" component={Score} />\n        <Route path=\"/about\" component={AboutMe} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}